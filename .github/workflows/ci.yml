name: "Continuous Integration"

on:
  push:
  pull_request:
    branches: [ master ]

env:
  AREA: denmark

jobs:
  build:
    name: Compile, install and build mbtiles
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends build-essential liblua5.1-0 liblua5.1-0-dev libprotobuf-dev libsqlite3-dev protobuf-compiler shapelib libshp-dev 

    - name: Build and install
      env:
        S_CFLAGS: -flto -ffunction-sections -fdata-sections
        S_CXXFLAGS: -flto -ffunction-sections -fdata-sections
        S_LDFLAGS: -Wl,-gc-sections
      run: |
        mkdir build
        cd build  
        export CFLAGS=${S_CFLAGS} && export CXXFLAGS=${S_CXXFLAGS} && export LDFLAGS=${S_LDFLAGS}
        BOOST_ROOT=$BOOST_ROOT_1_72_0 cmake -DTILEMAKER_USE_STATIC_BOOST=true ..
        make -j 
        sudo make install

    - name: Build openmaptiles-compatible mbtiles files of Denmark
      run: |
        curl http://download.geofabrik.de/europe/${AREA}-latest.osm.pbf -o ${AREA}.osm.pbf
        tilemaker ${AREA}.osm.pbf --config=resources/config-openmaptiles.json --process=resources/process-openmaptiles.lua --output=${AREA}.mbtiles --verbose

    - name: 'Upload compiled executable'
      uses: actions/upload-artifact@v2
      with:
        name: tilemaker
        path: build/tilemaker

  Github-Action:
    name: Build docker image and generate mbtiles with Github Action
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Download PBF file
      run: curl http://download.geofabrik.de/europe/${AREA}-latest.osm.pbf -o ${AREA}.osm.pbf

    - name: Build openmaptiles-compatible mbtiles files of given area
      uses: ./
      with:
        input: ${{ env.AREA }}.osm.pbf
        output: ${{ env.AREA }}.mbtiles
